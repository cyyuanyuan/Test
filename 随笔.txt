//升序降序 5678
 <van-icon name="arrow-down" v-show="sortKey==1" />
<van-icon name="arrow-up" v-show="sortKey==2" />
sortKey: 0, //0原始数据，1升序 2降序
 changeSort() {
      if (this.sortKey == 0 || this.sortKey == 2) {
        this.sortKey = 1;
      } else {
        this.sortKey = 2;
      }
    },
  if (this.sortKey > 0) {
        //价格排序用数组的sort方法
        goods.sort((a, b) => {
          return this.sortKey == 1 ? a.price - b.price : b.price - a.price;
        });
      }
//一行俩个布局
.cy_box > ul { 
        width: 4.8rem;
        display: flex;
        padding: 0 0.2rem;
        justify-content: space-between;
        flex-wrap: wrap;
        >li{
          height: 4rem;
            img{
                width: 2.33rem;
                height: 2.5rem;
                display: block;
            }
            >p:nth-of-type(1){
                font-size: 0.2rem;
                color: #000000;
                width: 2rem;
                overflow: hidden;
                text-overflow:ellipsis;
                white-space: nowrap;
            }
            >p:nth-of-type(2){
                font-size: 0.14rem;
                color: #B2B2B2;
                width: 2rem;
                overflow: hidden;
                text-overflow:ellipsis;
                white-space: nowrap;
               
            }
            >p:nth-of-type(3){
                font-size: 0.16rem;
                color: #D00000;
                margin-top: 0.1rem;
            }
        }
    
}